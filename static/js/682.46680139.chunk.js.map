{"version":3,"file":"static/js/682.46680139.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/phonebook.module.scss?fb6b","components/Phonebook/ContactForm/initialState.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactForm/contactForm.module.scss?409d","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/ContactList/ContactsListItem/ContactsListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactList/contactList.module.scss?4229","redux/phonebook/phonebook-selectors.js","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/contactsPage.module.scss?7cd3","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"phonebook_container__mKqp5\",\"contacts\":\"phonebook_contacts__VLBmt\"};","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__+mxmN\"};","import { useState } from 'react';\n\nimport initialState from './initialState';\nimport Button from 'shared/components/Button/Button';\n\nimport styles from './contactForm.module.scss';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchAddContact } from 'redux/phonebook/phonebook-operations';\nconst ContactsForm = () => {\n  const [contact, setContact] = useState({ ...initialState });\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setContact(prevContact => {\n      return { ...prevContact, [name]: value };\n    });\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    dispatch(fetchAddContact({ name, number }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact({ ...contact });\n    setContact({ ...initialState });\n  };\n\n  const { name, number } = contact;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <p>Name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <p>Number</p>\n      <input\n        className={styles.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button>Add contact</Button>\n    </form>\n  );\n};\n\nexport default ContactsForm;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\n\n// import styles from './filter.module.scss';\n\nconst Filter = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div\n    // className={styles.filter}\n    >\n      <label>Finde contacts by name</label>\n      <input\n        name=\"filter\"\n        value={value}\n        onChange={handleFilter}\n        placeholder=\"Find contacts\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/phonebook/phonebook-operations';\n\nimport Button from 'shared/components/Button/Button';\n\nconst ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <li>\n      {name}: {number}\n      <Button id={id} onClick={() => handleDeleteContact(id)}>\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nexport default ContactsListItem;\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__7z5z3\"};","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const finded = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n    );\n  });\n  return finded;\n};\n\nexport const isLoadingContacts = ({ contacts }) => contacts.loading;\n","import PropTypes from 'prop-types';\n\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\nimport Spiner from '../Spiner/Spiner';\n\nimport styles from './contactList.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getFilteredContacts,\n  isLoadingContacts,\n} from 'redux/phonebook/phonebook-selectors';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/phonebook/phonebook-operations';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  // const isContacts = Boolean(filteredContacts.length);\n  const isLoading = useSelector(isLoadingContacts);\n  // const contactsSorted = contacts;\n  // console.log(contacts)\n  // .sort(function (a, b) {\n  //   if (a.name.toLowerCase() > b.name.toLowerCase()) {\n  //     return 1;\n  //   }\n  //   if (a.name.toLowerCase() < b.name.toLowerCase()) {\n  //     return -1;\n  //   }\n  //   return 0;\n  // });\n\n  if (isLoading) {\n    return <Spiner />;\n  }\n  const elements = filteredContacts.map(({ id, name, number }) => {\n    return <ContactsListItem key={id} id={id} name={name} number={number} />;\n  });\n\n  return !elements.length > 0 ? (\n    <p>Not yet added contacts</p>\n  ) : (\n    <ol className={styles.list}>{elements}</ol>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styles from './phonebook.module.scss';\n\nimport ContactsForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactsList from './ContactList/ContactList';\n\nimport '../../shared/styles/styles.scss';\n\nconst Phonebook = () => {\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactsPage_container__KbM-e\"};","import Phonebook from 'components/Phonebook/Phonebook';\n\nimport styles from './contactsPage.module.scss';\n\nconst ContactsPage = () => {\n  return (\n    <div className={styles.container}>\n      <Phonebook />;\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["name","number","useState","initialState","contact","setContact","dispatch","useDispatch","handleChange","target","value","prevContact","className","styles","onSubmit","event","preventDefault","fetchAddContact","handleAddContact","type","onChange","pattern","title","required","Button","setFilter","placeholder","id","onClick","fetchDeleteContact","handleDeleteContact","getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","includes","isLoadingContacts","loading","ContactsList","useEffect","fetchAllContacts","filteredContacts","useSelector","Spiner","elements","map","length","defaultProps"],"sourceRoot":""}