{"version":3,"file":"static/js/34.f345a88e.chunk.js","mappings":"sNAuBA,EAhByB,SAAH,GAA8B,IAAxBA,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAC9BC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,0BACGH,EAAK,KAAGC,GACT,mBAAQF,GAAIA,EAAIK,QAAS,kBAPD,SAAAL,GAC1BG,GAASG,EAAAA,EAAAA,IAAmBN,GAC9B,CAKmCO,CAAoBP,EAAG,EAAC,SAAC,aAK9D,ECpBA,EAAuB,0B,SCOjBQ,EAAe,WAanB,IACMC,GADWC,EAAAA,EAAAA,IAAYC,EAAAA,GACHC,KAAI,YAA2B,IAAxBZ,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OACzC,OACE,SAAC,EAAgB,CAEfF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,GAHHF,EAMX,IAEA,OAAO,eAAIa,UAAWC,EAAY,SAAEL,GACtC,EAEA,IAEAD,EAAaO,aAAe,CAC1BC,SAAU,G","sources":["components/Phonebook/ContactList/ContactsListItem/ContactsListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactList/contactList.module.scss?4229","components/Phonebook/ContactList/ContactList.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/phonebook/phonebook-operations';\n\n// import styles from './contactsListItem.module.scss';\n\nconst ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <li>\n      {name}: {number}\n      <button id={id} onClick={() => handleDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactsListItem;\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__7z5z3\"};","import PropTypes from 'prop-types';\n\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\n\nimport styles from './contactList.module.scss';\nimport { getFilteredContacts } from 'redux/phonebook/phonebook-selectors';\nimport { useSelector } from 'react-redux';\n\nconst ContactsList = () => {\n  // const contactsSorted = contacts;\n  // console.log(contacts)\n  // .sort(function (a, b) {\n  //   if (a.name.toLowerCase() > b.name.toLowerCase()) {\n  //     return 1;\n  //   }\n  //   if (a.name.toLowerCase() < b.name.toLowerCase()) {\n  //     return -1;\n  //   }\n  //   return 0;\n  // });\n\n  const contacts = useSelector(getFilteredContacts)\n  const elements = contacts.map(({ id, name, number }) => {\n    return (\n      <ContactsListItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n      />\n    );\n  });\n\n  return <ol className={styles.list}>{elements}</ol>;\n};\n\nexport default ContactsList;\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n"],"names":["id","name","number","dispatch","useDispatch","onClick","fetchDeleteContact","handleDeleteContact","ContactsList","elements","useSelector","getFilteredContacts","map","className","styles","defaultProps","contacts"],"sourceRoot":""}